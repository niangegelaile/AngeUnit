apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    //默认设置
    defaultConfig {
        applicationId "com.example.ange"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86',  'x86_64'//, 'arm64-v8a','armeabi-v7a'
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //签名配置
    signingConfigs{
        project_prod{
            keyAlias KEY_AlIAS
            keyPassword KEY_PASSWORD
            storeFile new File(rootProject.rootDir,"ange.jks")
            storePassword STORE_PASSWORD
        }
    }

    //so包资源放置位置
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    //编译类型
    buildTypes {
        //调试
        debug{
            minifyEnabled false
            signingConfig signingConfigs.project_prod
        }
        //正式
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.project_prod
        }
    }

    productFlavors{
        prod{
            //把变量塞到androidmanifest文件里
            manifestPlaceholders=new HashMap<>()
            manifestPlaceholders.put("BAIDU_APIKEY","$BAIDU_APIKEY")
            manifestPlaceholders.put("XG_V2_ACCESS_ID","$XG_V2_ACCESS_ID")
            manifestPlaceholders.put("XG_V2_ACCESS_KEY","$XG_V2_ACCESS_KEY")
            manifestPlaceholders.put("EASEMOB_APPKEY","$EASEMOB_APPKEY")
            //把变量塞到buildConfig里
            buildConfigField("long","BAIDU_TRACE_SERVICE_ID","$BAIDU_TRACE_SERVICE_ID")
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':baidu_map_sdk')
    compile project(':multi-image-selector')
    compile project(':xgpush')
    compile project(':easeui')
    compile project(':ange')
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    androidTestCompile 'junit:junit:4.12'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'org.robolectric:robolectric:3.0'
//    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
//    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
//        exclude group: 'javax.inject', module: 'javax.inject'
//        exclude group: 'com.squareup', module: 'javawriter'
//    }
}
